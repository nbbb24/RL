Metadata-Version: 2.4
Name: ecg-rlhf-grpo
Version: 0.1.0
Summary: RLHF with GRPO for ECG Medical Reasoning
Home-page: https://github.com/yourusername/RL
Author: Xiaoyu Song
Author-email: Your Name <your.email@example.com>
License: MIT
Project-URL: Homepage, https://github.com/yourusername/RL
Project-URL: Documentation, https://github.com/yourusername/RL/blob/main/README.md
Project-URL: Repository, https://github.com/yourusername/RL
Project-URL: Bug Tracker, https://github.com/yourusername/RL/issues
Keywords: machine-learning,deep-learning,reinforcement-learning,RLHF,GRPO,ECG,medical-ai,llama,transformers,pytorch
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Scientific/Engineering :: Medical Science Apps.
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: torch>=2.8.0
Requires-Dist: torchvision>=0.23.0
Requires-Dist: transformers==4.56.0
Requires-Dist: accelerate==0.34.2
Requires-Dist: peft>=0.6.0
Requires-Dist: vllm>=0.11.0
Requires-Dist: trl>=0.7.0
Requires-Dist: ray[default]>=2.48.0
Requires-Dist: tensordict!=0.9.0,<=0.10.0,>=0.8.0
Requires-Dist: torchdata
Requires-Dist: datasets>=2.14.0
Requires-Dist: pandas==2.2.3
Requires-Dist: numpy==1.26.4
Requires-Dist: h5py==3.12.1
Requires-Dist: joblib==1.4.2
Requires-Dist: PyYAML==6.0.2
Requires-Dist: scipy==1.14.1
Requires-Dist: scikit-learn==1.5.2
Requires-Dist: scikit-image==0.21.0
Requires-Dist: ecg_plot@ git+https://github.com/willxxy/ecg-plot
Requires-Dist: wfdb==4.1.2
Requires-Dist: einops==0.8.0
Requires-Dist: PyWavelets==1.7.0
Requires-Dist: matplotlib==3.9.2
Requires-Dist: seaborn==0.13.2
Requires-Dist: tensorboard
Requires-Dist: nltk==3.9.1
Requires-Dist: rouge==1.0.1
Requires-Dist: sentencepiece==0.2.0
Requires-Dist: sacremoses==0.1.1
Requires-Dist: evaluate==0.4.3
Requires-Dist: bert_score
Requires-Dist: spacy==3.8.4
Requires-Dist: opencv_python==4.6.0.66
Requires-Dist: pillow==10.3.0
Requires-Dist: imageio==2.27.0
Requires-Dist: imgaug==0.4.0
Requires-Dist: imutils==0.5.4
Requires-Dist: openai>=1.52.0
Requires-Dist: requests==2.32.4
Requires-Dist: gradio==5.31.0
Requires-Dist: beautifulsoup4==4.12.2
Requires-Dist: html5lib==1.1
Requires-Dist: validators==0.18.2
Requires-Dist: qrcode==7.4.2
Requires-Dist: captum==0.7.0
Requires-Dist: tqdm==4.66.5
Requires-Dist: wandb==0.18.3
Requires-Dist: regex==2024.9.11
Requires-Dist: codetiming
Requires-Dist: hydra-core
Requires-Dist: pybind11
Requires-Dist: pylatexenc
Requires-Dist: ninja==1.11.1.3
Requires-Dist: termcolor==3.0.1
Requires-Dist: faiss-cpu==1.10.0
Requires-Dist: maturin==1.7.4
Requires-Dist: ruff
Requires-Dist: pre-commit
Requires-Dist: pytest
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: black>=22.0.0; extra == "dev"
Requires-Dist: flake8>=5.0.0; extra == "dev"
Requires-Dist: isort>=5.10.0; extra == "dev"
Provides-Extra: flash
Requires-Dist: flash-attn==2.7.4.post1; extra == "flash"
Provides-Extra: judge
Requires-Dist: llm-blender@ git+https://github.com/yuchenlin/LLM-Blender.git ; extra == "judge"
Requires-Dist: trl[judges]; extra == "judge"
Provides-Extra: deepspeed
Requires-Dist: deepspeed>=0.12.0; extra == "deepspeed"
Provides-Extra: all
Requires-Dist: pytest>=7.0.0; extra == "all"
Requires-Dist: black>=22.0.0; extra == "all"
Requires-Dist: flake8>=5.0.0; extra == "all"
Requires-Dist: isort>=5.10.0; extra == "all"
Requires-Dist: flash-attn==2.7.4.post1; extra == "all"
Requires-Dist: llm-blender@ git+https://github.com/yuchenlin/LLM-Blender.git ; extra == "all"
Requires-Dist: trl[judges]; extra == "all"
Requires-Dist: deepspeed>=0.12.0; extra == "all"
Dynamic: author
Dynamic: home-page
Dynamic: requires-python

# RLHF with GRPO for ECG Medical Reasoning

GRPO Experiments before integrated into [ECG-Bench](https://github.com/willxxy/ECG-Bench)

## Overview

- **Base Model**: [Llama-3.2-3B-Instruct](https://huggingface.co/meta-llama/Llama-3.2-3B-Instruct)
- **Dataset**: [ECG-Expert-QA](https://github.com/Zaozzz/ECG-Expert-QA)
- **Method**: GRPO (Group Relative Policy Optimization)

## Project Structure

```
RL/
├── data/                        # Dataset files
│   ├── raw/                    # Raw ECG-Expert-QA JSON files
│   ├── processed/              # Processed training data
│   └── system_prompt.txt       # ECG QA expert system prompt
├── models/                      # Model checkpoints
│   ├── base/                   # Base Llama model
│   ├── sft/                    # Supervised fine-tuned model
│   └── rlhf/                   # RLHF checkpoints
├── scripts/
│   ├── prepare_data.sh         # Prepare data for SFT/RL
│   ├── sft_train.sh            #SFT (LoRA)
│   └── chat_with_model.sh      # Quick script to chat with model
├── configs/                     # Training configurations
├── utils/                       # Helper functions
├── chat.py                      # Interactive chat with models
├── requirement.txt              # Python dependencies
├── README.md                    # This file
├── prepare_data.py              # Data preprocessing 
├── sft_train.py                 # SFT training
└── grpo_train.py                # GRPO training
```

## Step-by-Step Implementation Guide

### Phase 1: Environment Setup

#### Install Dependencies
Refer to ECG-Bench
Install the uv package manager via ```bash pip install uv.```

For Torch (Updated for vLLM 0.11.0+ compatibility)
```bash
uv pip uninstall -y vllm torch torchvision torchaudio
uv pip install "torch>=2.8.0" "torchvision>=0.23.0" \
  --extra-index-url https://download.pytorch.org/whl/cu124
```

For base installation 
```bash 
uv pip install -e . --no-build-isolation
```

For installation with flash attention 
```bash 
uv pip install -e ".[flash]" --no-build-isolation
```

For installation with judge 
```bash 
uv pip install -e ".[judge]"
```

For installation of all packages 
```bash 
uv pip install -e ".[all]" --no-build-isolation
```

#### Add VERL as a git submodule for version control and reproducibility
```bash
git submodule add https://github.com/volcengine/verl.git verl
git submodule update --init --recursive
```
```bash
cd verl
pip install --no-deps -e .
cd ..
```


#### huggingface login
```bash
huggingface-cli login
```

#### Clone Dataset
```bash
git submodule add https://github.com/Zaozzz/ECG-Expert-QA data/raw/ECG-Expert-QA
git submodule update --init --recursive
```

---

### Phase 2: Data Preparation

#### Preprocess Data
Run the data preparation script:
```bash
bash scripts/prepare_data.sh
```
---

### Phase 3: Supervised Fine-Tuning (SFT)

#### Configure SFT Training

**Training Parameters:**
- `--model_name`: Base model (meta-llama/Llama-3.2-3B-Instruct)
- `--num_epochs`
- `--batch_size`
- `--gradient_accumulation_steps`
- `--learning_rate`
- `--max_seq_length`
- `--lora_r`
- `--lora_alpha`

#### Run SFT Training
```bash
bash scripts/sft_train.sh
```
---


### Phase 4: GRPO Training
https://github.com/volcengine/verl/blob/main/examples/grpo_trainer/README.md

#### Configure GRPO

#### Run GRPO Training


---

### Phase 5: Evaluation & Testing

#### Quantitative Evaluation

#### Qualitative Analysis

#### Compare Models

---
